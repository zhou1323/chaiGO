# Domain
# This would be set to the production domain with an env var on deployment
DOMAIN=localhost

# Environment: local, staging, production
ENVIRONMENT=local

PROJECT_NAME="ChaiGO"
STACK_NAME=chaigo

# Backend
BACKEND_CORS_ORIGINS="http://localhost,http://localhost:5173,https://localhost,https://localhost:5173,http://localhost.tiangolo.com"
SECRET_KEY=changethis
FIRST_SUPERUSER=admin@example.com
FIRST_SUPERUSER_PASSWORD=changethis
USERS_OPEN_REGISTRATION=False

# Emails
SMTP_HOST=
SMTP_USER=
SMTP_PASSWORD=
EMAILS_FROM_NAME=
EMAILS_FROM_EMAIL=info@example.com
EMAIL_TEST_USER=
SMTP_TLS=True
SMTP_SSL=False
SMTP_PORT=587

# Postgres
POSTGRES_SERVER=localhost
POSTGRES_PORT=5432
POSTGRES_DB=app
POSTGRES_USER=postgres
POSTGRES_PASSWORD=changethis

# Redis
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_PASSWORD=changethis
REDIS_DATABASE=0

# aws s3
# TODO: LOGIC IF KEY NOT PROVISIONED
AWS_ACCESS_KEY_ID=changethis
AWS_SECRET_ACCESS_KEY=changethis
AWS_REGION_NAME=eu-north-1
AWS_BUCKET_NAME=chaigo

# aws cloudfront
CLOUDFRONT_DISTRIBUTION_DOMAIN=changethis
CLOUDFRONT_KEY_ID=changethis
CLOUDFRONT_PRIVATE_KEY_STRING=changethis

# OPENAPI
OPENAI_KEY=changethis

SENTRY_DSN=
FRONTEND_SENTRY_DSN=
FRONTEND_SENTRY_AUTH_TOKEN=
FRONTEND_SENTRY_PROJECT=
FRONTEND_SENTRY_ORG=

# Flower
FLOWER_BASIC_AUTH=admin:changethis

# Configure these with your own Docker registry images
DOCKER_IMAGE_BACKEND=backend
DOCKER_IMAGE_FRONTEND=frontend
DOCKER_IMAGE_CELERYWORKER=celeryworker